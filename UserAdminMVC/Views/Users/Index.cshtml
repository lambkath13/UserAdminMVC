@model IEnumerable<ApplicationUser>
@{
  ViewData["Title"] = "Users";
}

<div class="d-flex justify-content-between align-items-center mb-3">
  <h2 class="m-0">Users</h2>

  <form asp-action="Logout" asp-controller="Account" method="post" class="mb-0">
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-outline-dark">Logout</button>
  </form>
</div>

<div class="table-responsive">
  <form method="post" id="usersForm">
    @Html.AntiForgeryToken()

    <table class="table table-striped table-hover table-sm align-middle">
      <thead class="table-light">
      <tr>
        <th style="width:32px;"><input id="selectAll" class="form-check-input" type="checkbox" /></th>
        <th>E-mail</th>
        <th>Name</th>
        <th>Status</th>
        <th>Registered</th>
        <th>Last login</th>
      </tr>
      </thead>
      <tbody>
      @foreach (var u in Model)
      {
        <tr>
          <td>
            <input class="form-check-input sel" type="checkbox" name="userIds" value="@u.Id" />
          </td>
          <td>@u.Email</td>
          <td>@u.DisplayName</td>
          <td>
            @if (u.Status == UserStatus.Blocked) {
              <span class="badge bg-danger">Blocked</span>
            } else if (u.Status == UserStatus.Unverified) {
              <span class="badge bg-secondary">Unverified</span>
            } else {
              <span class="badge bg-success">Active</span>
            }
          </td>
          <td>@u.RegisteredAt.ToString("u")</td>
          <td>@u.LastLoginAt?.ToString("u")</td>
        </tr>
      }
      </tbody>
    </table>

    <div class="mt-3">
      <button formaction="@Url.Action("Block","Users")" class="btn btn-outline-warning me-2">Block</button>
      <button formaction="@Url.Action("Unblock","Users")" class="btn btn-outline-success me-2">Unblock</button>
      <button formaction="@Url.Action("Delete","Users")" class="btn btn-outline-danger me-2">Delete</button>
      <button formaction="@Url.Action("DeleteUnverified","Users")" class="btn btn-outline-secondary">Delete unverified</button>
    </div>
  </form>
</div>

@section Scripts {
  <script>
    document.getElementById('selectAll').addEventListener('change', e => {
      document.querySelectorAll('.sel').forEach(i => i.checked = e.target.checked);
    });

    async function ensureAllowed() {
      try {
        const r = await fetch('/Users/Status', { method: 'GET', credentials: 'same-origin' });
        if (r.status === 401) {
          window.location = '/Account/Login?msg=blocked';
          return false;
        }
        return true;
      } catch { return false; }
    }

    document.querySelectorAll('#usersForm button').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        const ok = await ensureAllowed();
        if (!ok) e.preventDefault();
      });
    });
  </script>
}
